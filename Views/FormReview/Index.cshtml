@model BPMPlus.ViewModels.FormReviewViewModel




@section Style
{

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    @*  <link rel="stylesheet" href="~/AdminLTE/plugins/fontawesome-free/css/all.min.css"> *@
    <!-- daterange picker -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/daterangepicker/daterangepicker.css">
    <!-- iCheck for checkboxes and radio inputs -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- Bootstrap Color Picker -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- Select2 -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="~/AdminLTE/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <!-- Bootstrap4 Duallistbox -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
    <!-- BS Stepper -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/bs-stepper/css/bs-stepper.min.css">
    <!-- dropzonejs -->
    <link rel="stylesheet" href="~/AdminLTE/plugins/dropzone/min/dropzone.min.css">
    <!-- Theme style -->
@*     <link rel="stylesheet" href="~/AdminLTE/dist/css/adminlte.min.css"> *@
    <style>

        #fullPage {
            background-color: #DFF1FF;
            padding: 10px;
        }

        h4 {
            color: #3D60A5;
        }

        #secondeBackground {
            background-color: #D1DEFF;
            margin-left: 15px;
            margin-right: 15px;
            margin-bottom: 15px;
        }

        .formBackground {
            background-color: #D1DEFF;
            padding-left: 35px;
            padding-right: 35px;
            display: block;
            padding-top: 15px;
        }

        #formArea {
            padding-bottom: 20px;
            display: flex;
        }

            #formArea label {
                background-color: #D8D7DB;
                margin: auto;
                width: 120px;
                text-align: center;
                border-radius: 5%;
                margin-right: 20px;
            }

            #formArea input {
                width: 180px;
                height: 30px;
                display: inline;
            }

        .process {
            padding-bottom: 20px;
        }

            .process label {
                margin: auto;
                height: 30px;
                width: 120px;
                text-align: center;
            }

            .process button {
                width: 80px;
                margin-right: 10px;
            }

        table {
            text-align: center;
            line-height: 1.5;
            padding-left: 50px;
        }

        .btnArea {
            height: 60px;
            display: flex;
            align-items: center;
        }

        .btns {
            width: auto;
            margin: auto,0;
        }

        .result {
            padding-left: 30px;
            padding-right: 30px;
            padding-bottom: 20px
        }

        .reviewResult {
            margin-left: 10px;
        }

            .reviewResult label {
                margin-right: 20px;
            }

        .file {
            padding-left: 50px;
        }

        .submit button {
            margin-right: 30px;
            width: 120px;
        }

        .pd {
            padding-left: 50px;
        }

        .ManagerOpinion {
            width: 100%;
            height: 200px;
        }

        .textContent {
            color: black;
        }

            .textContent[readonly] {
                resize: none;
                background-color: white;
            }

        input[type=text][readonly] {
            color: black;
            background-color: white;
        }

        .file {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-left: 30px;
            padding-right: 30px;
        }

        #btnDownload {
            font-size: 14px;
            white-space: nowrap; 
            min-width: 120px; 
        }

        #inputReview label {
            background-color: yellow;
            font-size: 14px;
            justify-content: space-between;
            align-items: center;
        }

        #inputReview input {
            width: 20px;
            height: 20px;
        }

        .result {
            padding: 20px 30px;
        }

        .result {
            padding: 20px 30px;
        }

            .result .noteContent {
                margin-bottom: 10px;
                font-weight: bold;
            }

            .result .textContent {
                width: 100%;
                min-height: 300px;
                overflow-y: visible; 
                overflow-x: auto; 
                padding: 10px;
                background-color: white;
                border: 1px solid #ced4da;
                border-radius: 0.25rem;
            }

            .result .textContent table{
                text-align:left;
            }

         /*        .result .textContent table {
                    width: 100%;
                    border-collapse: collapse;
                    margin-bottom: 0;
                }

                    .result .textContent table th,
                    .result .textContent table td {
                        border: 1px solid #ddd;
                        padding: 8px;
                        text-align: left;
                    }
                    */

        </style>
}


<div id="fullPage">
    <!--  title  -->
    <div class="title">
        <h4 class="m-3">審核工單</h4>
    </div>

    <form id="formArea" asp-controller="FormReview" method="post" asp-action="CreateAndUpdate" enctype="multipart/form-data">
        <div id="secondeBackground">

            <!-- 工單區域 -->
            <div class="formBackground">
                <div class="row" style="display:flex;">
                    <div class="col-6 mb-3 form-label">
                        <input type="hidden" asp-for="@Model.UserId" />
                        <input type="hidden" asp-for="@Model.ResultId" />
                        <input type="hidden" asp-for="@Model.DepartmentId" />
                        <input type="hidden" asp-for="@Model.UserActivityId" />
                        <input type="hidden" asp-for="@Model.ProcessNodeId" />
                        <label>工單編號</label>
                        <input asp-for="@Model.FormId" type="text" class="form-control" value="@Model.FormId" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>建立日期</label>
                        <input asp-for="@Model.Date" type="text" class="form-control" value="@Model.Date.ToLocalTime().ToString(" yyyy-MM-dd")" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>需求類別</label>
                        <input asp-for="@Model.CategoryDescription" type="text" class="form-control" value="@Model.CategoryDescription" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>處理狀態</label>
                        <input asp-for="@Model.CurrentResultsDescription" type="text" class="form-control" value="@Model.CurrentResultsDescription" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>需求部門</label>
                        <input asp-for="@Model.DepartmentName" type="text" class="form-control" value="@Model.DepartmentName" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>指派人員</label>
                        <input asp-for="@Model.AssginEmployee" type="text" class="assignEmp form-control" value="@Model.AssginEmployee" readonly />
                        <i class="fa-solid fa-spinner fa-spin loadIcon" style="color:grey;" hidden></i>
                        <i class="fa-solid fa-check checkIcon" style="color:green;" hidden></i>
                        <i class="fa-solid fa-xmark falseIcon" style="color: red;" hidden></i>
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>需求員工</label>
                        <input asp-for="@Model.NeedEmployees" type="text" class="form-control" value="@Model.NeedEmployees" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>希望完成日期</label>
                        <input asp-for="@Model.HopeFinishDate" type="text" class="form-control" value="@Model.HopeFinishDate.ToLocalTime().ToString(" yyyy-MM-dd")" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>所屬專案</label>
                        <input asp-for="@Model.BelongProjects" type="text" class="form-control" value="@Model.BelongProjects" readonly />
                    </div>
                    <div class="col-6 mb-3 form-label">
                        <label>預估工時</label>
                        <input asp-for="@Model.EstimatedTime" type="text" class="EstimatedTime form-control" value="@Model.EstimatedTime" readonly />
                    </div>
                </div>
            </div>

            <!--  流程節點進度  -->
            <label style="margin-left:35px;">流程進度</label>
            <br>
            <div class="formBackground btnArea">

                <div>
                    @foreach (var activity in Model.FormProcessFlow)
                    {
                        if (activity.IsHightLight == true)
                        {
                            <button type="button" class="btn btn-sm btn-danger btns">@activity.UserActivityIdDescription</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-sm btn-primary btns">@activity.UserActivityIdDescription</button>
                        }
                    }

                </div>
            </div><br /><br />

            <!--  工單處理紀錄  -->
            <label>處理紀錄</label>
            <table class="table table-hover table-bordered ">
                <thead>
                    <tr>
                        <th>時間</th>
                        <th>處理狀態</th>
                        <th>處理人員</th>
                        <th>出示意見</th>
                        <th>審核結果</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.FormRecordList)
                    {
                        <tr>
                            <td>@item.Date.ToLocalTime()</td>
                            <td>@item.UserActivityDes</td>
                            <td>@item.UserName</td>
                            <td>@item.Remark</td>
                            <td>@item.ResultDes</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- 需求內容/附件/出示意見 -->
            <!-- 需求內容 -->
            <div class="result">
                <label class="noteContent">需求內容</label><br>
                    <div asp-for="@Model.Content" class="textContent form-control" readonly>@Html.Raw(Model.Content)</div>
            </div>

            <!-- 附件上傳/下載 -->
            <div>
                <input type="hidden" name="id" value="@Model.FormId" />
                <div class="form-group">
                    <div class="file">
                        <div style="margin-right:600px;">
                            <label id="attachment">附件</label>
                            <input asp-for="@Model.Files" type="file" class="form-control" multiple />
                        </div>
                        <button id="btnDownload" class="button btn btn-primary" type="button">
                            <i class="fa-solid fa-file-arrow-down"></i>  附件下載
                        </button>
                    </div>
                </div>
            </div>

            <div class="result">
                <label class="control-label">出示意見</label><br />
                <div class="txtInput">
                    <div>
                        @* <div id="summernote"></div> *@
                        <textarea class="ManagerOpinion" asp-for="@Model.Remark">
                            @Model.Remark
                            </textarea>
                    </div>
                </div>
                <div style="display:flex; justify-content: space-between; align-items: center;">
                    <div class="reviewResult" style="flex: 1; text-align: left;">
                        <label>審核結果: </label>
                    </div>
                    <div class="reviewOptions" style="flex: 1; text-align: center;">
                        <div id="inputReview">
                            <label><input name="reviewResult" type="radio" value="reject" class="rejectBtn"/>退回</label>
                            <label><input name="reviewResult" type="radio" value="approve" class="approveBtn" /> 核准</label>
                        </div>
                    </div>
                    <div class="submitBtn" style="flex: 1; text-align: right;">
                        <input type="submit" class="btn btn-success btns" value="送出" />
                    </div>
                </div>

            </div>
        </div><!-- secondeBackground END -->
    </form>
</div>

@section Scripts
{
    <script src="~/AdminLTE/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/AdminLTE/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Select2 -->
    <script src="~/AdminLTE/plugins/select2/js/select2.full.min.js"></script>
    <!-- Bootstrap4 Duallistbox -->


    <script src="~/AdminLTE/plugins/inputmask/jquery.inputmask.min.js"></script>
    <!-- date-range-picker -->


    <script src="~/AdminLTE/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>

    
    <!-- AdminLTE for demo purposes -->
    <script src="~/AdminLTE/dist/js/demo.js"></script>
    <script>
        // 一進到審核頁發請求詢問身分是否為接收方一級主管or 處理人員 or 驗收方, 是的話移除唯讀, 提供輸入指派者 or 處理人員輸入預估工時
        document.addEventListener('DOMContentLoaded', async function () {
            let formId = '@Model.FormId';
            let needEmp = document.querySelector(".assignEmp");
            let formValid = document.getElementById("formArea");
            let checkEstimatedTime = document.querySelector(".EstimatedTime");
            let checkIcon = document.querySelector(".checkIcon");
            let falseIcon = document.querySelector(".falseIcon");
            let loadIcon = document.querySelector(".loadIcon");
            let userPermit;

            // Validate employee function
            async function validateEmp(empName) {
                let response = await fetch(`/FormReview/AssignEmp?empName=${empName}`, {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                let result = await response.json();
                return result;
            }

            // Send request to check permissions
            fetch(`/FormReview/CheckEmp/?id=${formId}`, {
                method: "GET"
            })
                .then(response => response.json())
                .then(data => {
                    userPermit = data.userPermit;
                    if (data.status === true) {
                        needEmp.value = data.handler || '';

                        if (data.userPermit === "07") {
                            let rejectBtn = document.querySelector(".rejectBtn");
                            let approveBtn = document.querySelector(".approveBtn");
                            needEmp.value = "";

                            function handleRejectClick() {
                                needEmp.setAttribute("readonly", "readonly");
                                needEmp.value = "退回時無需填寫人員";
                                needEmp.style = "color:red;"
                                checkIcon.setAttribute("hidden", "hidden");
                                falseIcon.setAttribute("hidden", "hidden");
                                loadIcon.setAttribute("hidden", "hidden");
                            }

                            function handleApproveClick() {
                                needEmp.removeAttribute("readonly");
                                if (needEmp.value === "退回時無需填寫人員"){
                                    needEmp.value = "";
                                }
                            }

                            rejectBtn.addEventListener("click", handleRejectClick);
                            approveBtn.addEventListener("click", handleApproveClick);

                            needEmp.removeAttribute("readonly");
                            checkEstimatedTime.setAttribute("readonly", "readonly");
                            checkEstimatedTime.value = data.time || '';

                            needEmp.addEventListener("input", function (event) {
                                clearTimeout(this.inputTimer);
                                let enterEmp = needEmp.value.trim();

                                if (enterEmp.length > 0) {
                                        checkIcon.setAttribute("hidden", "hidden");
                                        falseIcon.setAttribute("hidden", "hidden");
                                        loadIcon.setAttribute("hidden", "hidden");
                                        loadIcon.removeAttribute("hidden");
                                    this.inputTimer = setTimeout(async () => {
                                        let result = await validateEmp(enterEmp);
                                        loadIcon.setAttribute("hidden", "hidden");
                                        if (result.status) {
                                            checkIcon.removeAttribute("hidden");
                                        } else {
                                            falseIcon.removeAttribute("hidden");
                                        }
                                    }, 1000);
                                }else{
                                    checkIcon.setAttribute("hidden", "hidden");
                                    falseIcon.setAttribute("hidden", "hidden");
                                    loadIcon.setAttribute("hidden", "hidden");
                                }
                            });
                        } else if (data.userPermit === "08") {
                            needEmp.setAttribute("readonly", "readonly");
                            checkEstimatedTime.removeAttribute("readonly");

                            if (data.previousEstimatedTime) {
                                checkEstimatedTime.value = data.previousEstimatedTime;
                            } else {
                                checkEstimatedTime.value = data.time || '';
                            }
                        } else {
                            needEmp.setAttribute("readonly", "readonly");
                            checkEstimatedTime.setAttribute("readonly", "readonly");
                            checkEstimatedTime.value = data.time || '';
                        }

                        // Form submission validation
                        formValid.addEventListener("submit", async function (event) {
                            event.preventDefault();
                            let rejectBtn = document.querySelector('input[name="reviewResult"][value="reject"]').checked;
                            let approveBtn = document.querySelector('input[name="reviewResult"][value="approve"]').checked;
                            let enterEmp = needEmp.value.trim();

                            let errorMessages = [];

                            if (!rejectBtn && !approveBtn) {
                                errorMessages.push("請選擇「核准」或「退回」");
                            }

                            if (data.userPermit === "07" && approveBtn && enterEmp === "") {
                                errorMessages.push("請填寫指派人員");
                            }

                            if (errorMessages.length > 0) {
                                alert(errorMessages.join("，並且"));
                                return;
                            }

                            if (data.userPermit === "07" && approveBtn && enterEmp !== "") {
                                let result = await validateEmp(enterEmp);
                                if (!result.status) {
                                    alert("請填寫正確的指派人員！");
                                    return;
                                }
                            }

                            if (confirm("確定要送出嗎？")) {
                                this.submit();
                            }
                        });
                    } else {
                        needEmp.setAttribute("readonly", "readonly");
                        checkEstimatedTime.setAttribute("readonly", "readonly");
                        alert("您沒有權限進行此操作。");
                    }
                })
                .catch(err => {
                    alert("發生錯誤：" + JSON.stringify(err));
                });
        });

        // 檔案下載
        document.getElementById("btnDownload").addEventListener("click", function () {

            let userConfirmed = confirm("是否下載?");
            if (!userConfirmed) return;

            let id = '@Model.FormId';

            let formData = new FormData();
            formData.append("id", id);

            fetch('/FormReview/Download', {
                method: 'POST',
                body: formData,
            }).then(response => {
                // 檢查是否成功
                if (!response.ok) {
                    throw new Error('下載失敗');
                }

                // 嘗試獲取回應的內容類型
                let contentType = response.headers.get("content-type");

                // 如果伺服器返回的是文本
                if (contentType && contentType.includes("text")) {
                    return response.text().then(text => {
                        alert(text);  // 例如：顯示 "無檔案可下載"
                    });
                }

                // 否則繼續處理檔案下載
                return response.blob().then(blob => {
                    let file = window.URL.createObjectURL(blob);
                    let link = document.createElement('a');
                    link.href = file;
                    link.download = 'download.zip';  // 可以更改為你的文件名
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                    alert("下載成功");
                });
            }).catch(error => {
                alert(error.message);
            });
        })
    </script>
}




